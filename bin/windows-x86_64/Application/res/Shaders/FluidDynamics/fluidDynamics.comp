#version 450

layout(set = 0, binding = 0, rg16f) uniform image2D image;

layout( push_constant ) uniform constants
{
	vec2 sourcePos;
	float sourceRadius;
} pushConstants;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

void main()
{
    ivec2 px = ivec2(gl_GlobalInvocationID.xy);
	float dist = length(pushConstants.sourcePos - vec2(px));
	vec4 dc;
	if (dist < pushConstants.sourceRadius)
	{
		dc = vec4(1);
	}
	else
	{
		dc = imageLoad(image, px);
	}
	float k = 1.0;
	vec4 d1 = imageLoad(image, px + ivec2(1, 0));
	vec4 d2 = imageLoad(image, px - ivec2(1, 0));
	vec4 d3 = imageLoad(image, px + ivec2(0, 1));
	vec4 d4 = imageLoad(image, px - ivec2(0, 1));

	vec4 dn = (dc + k * (d1 + d2 + d3 + d4) / 4) / (1 + k);
	imageStore(image, px, dn);	
}