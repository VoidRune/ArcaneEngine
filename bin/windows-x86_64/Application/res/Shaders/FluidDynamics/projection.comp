#version 450

layout(set = 0, binding = 0, rg16f) uniform image2D velocity;
layout(set = 0, binding = 1, rg8) uniform image2D divergencePressure;

layout( push_constant ) uniform constants
{
	vec2 sourcePos;
	vec2 sourceVelocity;
	float sourceRadius;
	float deltaTime;
} pushConstants;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

void main()
{
    ivec2 px = ivec2(gl_GlobalInvocationID.xy);
	float pl = imageLoad(divergencePressure, px - ivec2(1, 0)).y;
	float pr = imageLoad(divergencePressure, px + ivec2(1, 0)).y;
	float pb = imageLoad(divergencePressure, px - ivec2(0, 1)).y;
	float pt = imageLoad(divergencePressure, px + ivec2(0, 1)).y;

	vec2 vel = imageLoad(velocity, px).xy;
	vec2 grad = vec2(pr - pl, pt - pb);
	imageStore(velocity, px, vec4(vel - grad, 0, 0));
}